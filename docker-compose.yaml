services:
  postgres:
    image: postgres:13-alpine
    container_name: postgres-onboarding
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tajji_onboarding_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - onboarding-net

  redis:
    image: redis:6-alpine
    container_name: redis-onboarding
    ports:
      - "6379:6379"
    networks:
      - onboarding-net
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  axonserver:
    image: axoniq/axonserver:latest
    container_name: axonserver
    environment:
      AXONIQ_AXONSERVER_HOSTNAME: localhost
      AXONIQ_AXONSERVER_DEFAULT_CONTEXT: $${spring.application.name}
    ports:
      - "8024:8024"  # for HTTP requests
      - "8124:8124"  # for Axon server connections
    networks:
      - onboarding-net
    volumes:
      - axon_data:/data
      - axon_eventstore:/eventstore

  minio:
    image: bitnami/minio:2024.10.13
    container_name: minio-onboarding
    environment:
      MINIO_ROOT_USER: key
      MINIO_ROOT_PASSWORD: pass
    ports:
      - "9000:9000"
    networks:
      - onboarding-net
    volumes:
      - minio_data:/data
    command: ["server", "/data"]

volumes:
  postgres_data:
  redis_data:
  axon_data:
  axon_eventstore:
  minio_data:

networks:
  onboarding-net:
    driver: bridge
